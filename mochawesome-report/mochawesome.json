{
  "stats": {
    "suites": 7,
    "tests": 28,
    "passes": 24,
    "pending": 0,
    "failures": 4,
    "start": "2021-11-30T14:46:43.830Z",
    "end": "2021-11-30T14:46:43.848Z",
    "duration": 18,
    "testsRegistered": 28,
    "passPercent": 85.71428571428571,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "512cb3fc-6b76-4dd9-8441-61bb13349484",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eee4e98a-8a6e-4c33-9007-9a4b1a477057",
          "title": "add.js",
          "fullFile": "C:\\Koulu\\Software Testing\\Software-Testing-Assignment\\test\\add.test.js",
          "file": "\\test\\add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adds two positive numbers",
              "fullTitle": "add.js Adds two positive numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(10,10)).to.equal(20);",
              "err": {},
              "uuid": "69d3d820-608b-43a8-9226-61cf80d59706",
              "parentUUID": "eee4e98a-8a6e-4c33-9007-9a4b1a477057",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds two negative numbers",
              "fullTitle": "add.js Adds two negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-10,-10)).to.equal(-20);",
              "err": {},
              "uuid": "da216929-c6d5-4efe-8373-cc874c13cbf7",
              "parentUUID": "eee4e98a-8a6e-4c33-9007-9a4b1a477057",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds a negative to a positive number",
              "fullTitle": "add.js Adds a negative to a positive number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(10,-10)).to.equal(0);",
              "err": {},
              "uuid": "56954fc8-2d9a-4f2b-bd2e-348f4b32c294",
              "parentUUID": "eee4e98a-8a6e-4c33-9007-9a4b1a477057",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds a positive number to a negative number",
              "fullTitle": "add.js Adds a positive number to a negative number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-10,10)).to.equal(0);",
              "err": {},
              "uuid": "11f2a8e7-d927-4cca-9a2f-ab01b6828c95",
              "parentUUID": "eee4e98a-8a6e-4c33-9007-9a4b1a477057",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw error when given a string",
              "fullTitle": "add.js Should throw error when given a string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(10,\"Test\")).to.throw();",
              "err": {
                "message": "AssertionError: expected '10Test' to be a function",
                "estack": "AssertionError: expected '10Test' to be a function\n    at Context.<anonymous> (file:///C:/Koulu/Software%20Testing/Software-Testing-Assignment/test/add.test.js:23:40)\n    at processImmediate (internal/timers.js:464:21)",
                "diff": null
              },
              "uuid": "8070539b-ac58-46a4-b50f-4e6e9ad2bb40",
              "parentUUID": "eee4e98a-8a6e-4c33-9007-9a4b1a477057",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw error when given an array",
              "fullTitle": "add.js Should throw error when given an array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(10,[1, 2, 3])).to.throw();",
              "err": {
                "message": "AssertionError: expected NaN to be a function",
                "estack": "AssertionError: expected NaN to be a function\n    at Context.<anonymous> (file:///C:/Koulu/Software%20Testing/Software-Testing-Assignment/test/add.test.js:28:43)\n    at processImmediate (internal/timers.js:464:21)",
                "diff": null
              },
              "uuid": "16ea860f-ef51-4775-822c-6d84d75588d9",
              "parentUUID": "eee4e98a-8a6e-4c33-9007-9a4b1a477057",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69d3d820-608b-43a8-9226-61cf80d59706",
            "da216929-c6d5-4efe-8373-cc874c13cbf7",
            "56954fc8-2d9a-4f2b-bd2e-348f4b32c294",
            "11f2a8e7-d927-4cca-9a2f-ab01b6828c95"
          ],
          "failures": [
            "8070539b-ac58-46a4-b50f-4e6e9ad2bb40",
            "16ea860f-ef51-4775-822c-6d84d75588d9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "81786947-4a46-4863-9aba-047ba050cc63",
          "title": "difference.js",
          "fullFile": "C:\\Koulu\\Software Testing\\Software-Testing-Assignment\\test\\difference.test.js",
          "file": "\\test\\difference.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return array without any 'Banana' or 'Tomato' strings",
              "fullTitle": "difference.js Should return array without any 'Banana' or 'Tomato' strings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference(input, ['Banana', 'Tomato'])).to.eql(['Green Apple',  'Potato']);",
              "err": {},
              "uuid": "18c69f09-7785-4294-aa40-f77ba6128cdd",
              "parentUUID": "81786947-4a46-4863-9aba-047ba050cc63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return array without specified numbers",
              "fullTitle": "difference.js Should return array without specified numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference([0, 1, 2, 3], [0, 1])).to.eql([2,  3]);",
              "err": {},
              "uuid": "b6fdeef5-afd2-44fa-8a32-128de97678ef",
              "parentUUID": "81786947-4a46-4863-9aba-047ba050cc63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if parameter is non-array",
              "fullTitle": "difference.js Should return empty array if parameter is non-array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(difference(1, [0, 1])).to.eql([]);",
              "err": {},
              "uuid": "b4ecbdf8-af55-453d-8b65-bbd326dc635b",
              "parentUUID": "81786947-4a46-4863-9aba-047ba050cc63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should filter string from input",
              "fullTitle": "difference.js Should filter string from input",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(difference('GreAen Apbple', ['A', 'b'])).to.eql(['Green Apple']);",
              "err": {
                "message": "AssertionError: expected [] to deeply equal [ 'Green Apple' ]",
                "estack": "AssertionError: expected [] to deeply equal [ 'Green Apple' ]\n    at Context.<anonymous> (file:///C:/Koulu/Software%20Testing/Software-Testing-Assignment/test/difference.test.js:25:60)\n    at processImmediate (internal/timers.js:464:21)",
                "diff": "- []\n+ [\n+   \"Green Apple\"\n+ ]\n"
              },
              "uuid": "6acf3e1a-1ae0-422f-b799-6c2a263ab9cd",
              "parentUUID": "81786947-4a46-4863-9aba-047ba050cc63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18c69f09-7785-4294-aa40-f77ba6128cdd",
            "b6fdeef5-afd2-44fa-8a32-128de97678ef",
            "b4ecbdf8-af55-453d-8b65-bbd326dc635b"
          ],
          "failures": [
            "6acf3e1a-1ae0-422f-b799-6c2a263ab9cd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c67dc468-7d73-4fe5-a7c8-8bebbcc35aba",
          "title": "filter.js",
          "fullFile": "C:\\Koulu\\Software Testing\\Software-Testing-Assignment\\test\\filter.test.js",
          "file": "\\test\\filter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select bananas",
              "fullTitle": "filter.js Should select bananas",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(filter(input, (product) => product == 'Banana')).to.eql(['Banana', 'Banana']);",
              "err": {},
              "uuid": "e65ad1a5-0e39-4b4f-aa98-8bc4ae3a14d3",
              "parentUUID": "c67dc468-7d73-4fe5-a7c8-8bebbcc35aba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should exclude bananas",
              "fullTitle": "filter.js Should exclude bananas",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(filter(input, (product) => product != 'Banana')).to.eql(['Green Apple', 'Tomato', 'Potato']);",
              "err": {},
              "uuid": "ca2f8036-fb3a-4396-b549-46eaba951277",
              "parentUUID": "c67dc468-7d73-4fe5-a7c8-8bebbcc35aba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should filter letters from string",
              "fullTitle": "filter.js Should filter letters from string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(filter(stringInput, (product) => product == 'o')).to.eql(['o', 'o','o', 'o']);",
              "err": {},
              "uuid": "91676739-7af4-48f8-ab87-4216dc090ac3",
              "parentUUID": "c67dc468-7d73-4fe5-a7c8-8bebbcc35aba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array if not array",
              "fullTitle": "filter.js Should return empty array if not array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(filter(12345, (product) => product == 12345)).to.eql([[]]);",
              "err": {},
              "uuid": "1534ff63-a61d-4445-95bd-012aeb528e15",
              "parentUUID": "c67dc468-7d73-4fe5-a7c8-8bebbcc35aba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e65ad1a5-0e39-4b4f-aa98-8bc4ae3a14d3",
            "ca2f8036-fb3a-4396-b549-46eaba951277",
            "91676739-7af4-48f8-ab87-4216dc090ac3",
            "1534ff63-a61d-4445-95bd-012aeb528e15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ecfbc7c6-1084-42df-9048-b4b722320994",
          "title": "keys.js",
          "fullFile": "C:\\Koulu\\Software Testing\\Software-Testing-Assignment\\test\\keys.test.js",
          "file": "\\test\\keys.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return keys of object",
              "fullTitle": "keys.js Should return keys of object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(keys({name:'Green Apple', category: \"fruit\"})).to.eql(['name', 'category']);",
              "err": {},
              "uuid": "7e140c59-cefa-4fd5-8bf9-ff81efb59d23",
              "parentUUID": "ecfbc7c6-1084-42df-9048-b4b722320994",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return indexes of array",
              "fullTitle": "keys.js Should return indexes of array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(keys(objectInput)).to.eql([ '0', '1', '2', '3', '4' ]);",
              "err": {},
              "uuid": "1b8d992c-dd67-4d72-a3b7-8a3b04b5ddc8",
              "parentUUID": "ecfbc7c6-1084-42df-9048-b4b722320994",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return indexes of string",
              "fullTitle": "keys.js Should return indexes of string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(keys(\"Test\")).to.eql([ '0', '1', '2', '3']);",
              "err": {},
              "uuid": "1094c0e8-19c4-4ac8-9bf3-d6a597ad7e4d",
              "parentUUID": "ecfbc7c6-1084-42df-9048-b4b722320994",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return empty array with number parameter",
              "fullTitle": "keys.js Should return empty array with number parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(keys(12345)).to.eql([]);",
              "err": {},
              "uuid": "f3bef067-2387-4a69-bd29-b54c1e83c335",
              "parentUUID": "ecfbc7c6-1084-42df-9048-b4b722320994",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e140c59-cefa-4fd5-8bf9-ff81efb59d23",
            "1b8d992c-dd67-4d72-a3b7-8a3b04b5ddc8",
            "1094c0e8-19c4-4ac8-9bf3-d6a597ad7e4d",
            "f3bef067-2387-4a69-bd29-b54c1e83c335"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dcfbceb7-cc03-49f8-9116-a420dca8d7f6",
          "title": "map.js",
          "fullFile": "C:\\Koulu\\Software Testing\\Software-Testing-Assignment\\test\\map.test.js",
          "file": "\\test\\map.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should apply a 40% discount to products in array",
              "fullTitle": "map.js Should apply a 40% discount to products in array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(map(objectInput, discount)).to.eql(objectsDiscount);",
              "err": {},
              "uuid": "7651138c-01f1-49e7-8cbd-ee3e3f13b2b9",
              "parentUUID": "dcfbceb7-cc03-49f8-9116-a420dca8d7f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should create an array of uppercase letters",
              "fullTitle": "map.js Should create an array of uppercase letters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(map('green apple', makeUpperCase)).to.eql(['G','R','E','E','N',' ','A','P','P','L','E']);",
              "err": {},
              "uuid": "0d7164c6-0fb9-4b26-9cbd-0e68c37f25e1",
              "parentUUID": "dcfbceb7-cc03-49f8-9116-a420dca8d7f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return array with undefined as it's only item",
              "fullTitle": "map.js Should return array with undefined as it's only item",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(map(1000, discount)).to.eql([undefined]);",
              "err": {},
              "uuid": "e2918f6e-c495-45d5-9725-598f509d46f9",
              "parentUUID": "dcfbceb7-cc03-49f8-9116-a420dca8d7f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7651138c-01f1-49e7-8cbd-ee3e3f13b2b9",
            "0d7164c6-0fb9-4b26-9cbd-0e68c37f25e1",
            "e2918f6e-c495-45d5-9725-598f509d46f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9831574-e759-4458-ae65-ecb21415c33a",
          "title": "reduce.js",
          "fullFile": "C:\\Koulu\\Software Testing\\Software-Testing-Assignment\\test\\reduce.test.js",
          "file": "\\test\\reduce.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should calculate cumulative sum",
              "fullTitle": "reduce.js Should calculate cumulative sum",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(reduce(numberArray, (sum, n) => sum + n, 0)).to.eql(229);",
              "err": {},
              "uuid": "b6617876-a246-43e2-9153-551b2a24cc13",
              "parentUUID": "a9831574-e759-4458-ae65-ecb21415c33a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return array of vegetables",
              "fullTitle": "reduce.js Should return array of vegetables",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(reduce(objectInput, (result, n) => {\n    if(n.category === 'vegetable') {      \n        result.push(n);          \n        return result;\n    }\n    return result;\n}, [])).to.eql([{name:'Tomato', category: \"vegetable\"}, {name:'Potato', category: \"vegetable\"}]);",
              "err": {},
              "uuid": "37d4c000-03de-44db-8093-afd994ecbdca",
              "parentUUID": "a9831574-e759-4458-ae65-ecb21415c33a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should reduce with a string parameter",
              "fullTitle": "reduce.js Should reduce with a string parameter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(reduce(\"World\", (sum, n) => sum + n, \"Hello \")).to.eql('Hello World');",
              "err": {},
              "uuid": "e3353de6-2f45-40ad-81ca-2558a4fe78aa",
              "parentUUID": "a9831574-e759-4458-ae65-ecb21415c33a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should reduce with a number parameter",
              "fullTitle": "reduce.js Should reduce with a number parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(reduce(100, (sum, n) => sum + n, 50)).to.equal(150);",
              "err": {
                "message": "AssertionError: expected 50 to equal 150",
                "estack": "AssertionError: expected 50 to equal 150\n    at Context.<anonymous> (file:///C:/Koulu/Software%20Testing/Software-Testing-Assignment/test/reduce.test.js:33:57)\n    at processImmediate (internal/timers.js:464:21)",
                "diff": "- 50\n+ 150\n"
              },
              "uuid": "1fabe66b-bf8b-40ee-a551-4b5a148f3dab",
              "parentUUID": "a9831574-e759-4458-ae65-ecb21415c33a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6617876-a246-43e2-9153-551b2a24cc13",
            "37d4c000-03de-44db-8093-afd994ecbdca",
            "e3353de6-2f45-40ad-81ca-2558a4fe78aa"
          ],
          "failures": [
            "1fabe66b-bf8b-40ee-a551-4b5a148f3dab"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6866f801-4676-4d40-a4fe-f80a74a26ff0",
          "title": "words.js",
          "fullFile": "C:\\Koulu\\Software Testing\\Software-Testing-Assignment\\test\\words.test.js",
          "file": "\\test\\words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return array of words",
              "fullTitle": "words.js Should return array of words",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(words(stringInput)).to.eql(['Green' ,'Apple', 'Tomato', 'Banana', 'Potato']);",
              "err": {},
              "uuid": "197f7919-2021-430b-ac9f-4e8034e33fe0",
              "parentUUID": "6866f801-4676-4d40-a4fe-f80a74a26ff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should throw an error for array parameter",
              "fullTitle": "words.js Should throw an error for array parameter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(function() {words(input);}).to.throw();",
              "err": {},
              "uuid": "d049925b-3509-4925-90eb-99dbcad3d7bb",
              "parentUUID": "6866f801-4676-4d40-a4fe-f80a74a26ff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return string matching the pattern",
              "fullTitle": "words.js Should return string matching the pattern",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(words(stringInput, 'Green Apple')).to.eql(['Green Apple']);",
              "err": {},
              "uuid": "8cfee93c-d1eb-4eaa-86aa-c9eb9a4caab3",
              "parentUUID": "6866f801-4676-4d40-a4fe-f80a74a26ff0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "197f7919-2021-430b-ac9f-4e8034e33fe0",
            "d049925b-3509-4925-90eb-99dbcad3d7bb",
            "8cfee93c-d1eb-4eaa-86aa-c9eb9a4caab3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}